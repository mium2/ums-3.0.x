<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <mvc:annotation-driven />
    <context:component-scan base-package="kr.uracle.ums"/>
    <mvc:resources mapping="/**" location="/" />

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>/WEB-INF/classes/messages/message</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8" />
        <property name="cacheSeconds" value="60" />
        <!--<property name="charset"><value>UTF-8</value></property>-->
    </bean>
    <!-- 언어 정보를 세션에 저장하여 사용합니다. -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />

    <bean id="myProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	  <property name="locations">
	    <list>
            <value>classpath:config/common.properties</value>
	    </list>
	  </property>
        <property name="fileEncoding" value="UTF-8"/>
	</bean>
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="properties" ref="myProperties" />
	</bean>
    <!--  content type : text/json 처리를 위해 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes" value="application/json"/>
                </bean>
            </list>
        </property>
    </bean>

    <!--Gson 인스턴스로 등록-->
    <bean id="gson" class="com.google.gson.Gson"/>

    <!-- Datasource 정의 -->
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>${UMS.database.jndiname}</value>
        </property>
        <property name="resourceRef" value="true"/>
    </bean>
    <!--
  	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
   		<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
    	<property name="url" value="jdbc:oracle:thin:@211.241.199.243:1521:orcl"/>
    	<property name="username" value="UMS30"/>
    	<property name="password" value="uracle1234"/>
  	</bean>
    -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--<property name="configLocation" value="classpath:spring/mybatis-config.xml" />-->
        <property name="mapperLocations">
            <list>
                <value>classpath*:sqlMap/${UMS.DBTYPE}/**/*.xml</value>
                <value>classpath:sqlMap/extention/${UMS.DBTYPE}/**/*.xml</value>
            </list>
        </property>
    </bean>
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
        <qualifier value="sqlSessionTemplate"/>
    </bean>

    <bean id="dataSourceTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
        <qualifier value="dataSourceTransactionManager"/>
    </bean>

    <!--REDIS Sentinel을 사용할때-->
    <!--<import resource="sentinel_redis.xml"/>-->

    <!--REDIS Sentinel을 사용하지 않고 마스터 한대만 있을 때-->
    <import resource="none_sentinel_redis.xml"/>

    <!--REDIS Cluster를 사용할 때-->
    <!--<import resource="cluster_redis.xml"/>-->


    <import resource="./cors.xml" />

</beans>
